{"ast":null,"code":"var _jsxFileName = \"/Users/scc9811/GitHub/CapstoneDesign_FrontEnd/src/pages/SignUpPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignUpPage() {\n  _s();\n  // 각 입력 필드의 상태를 관리하는 useState 훅을 사용합니다.\n  const [userId, setUserId] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n\n  // 회원가입 버튼을 클릭할 때 실행되는 함수입니다.\n  const handleSignUp = () => {\n    // 간단히 입력된 정보를 콘솔에 출력합니다.\n    console.log('ID:', userId);\n    console.log('Password:', password);\n    console.log('Name:', name);\n\n    // 여기에 실제 회원가입 로직을 구현할 수 있습니다.\n    // 서버로 회원가입 정보를 전송하거나, 다른 작업을 수행할 수 있습니다.\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userId,\n          onChange: e => setUserId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\uC774\\uB984:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignUp,\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(SignUpPage, \"3ViWirYuWMLLU2TbsEKPfSGr4rI=\");\n_c = SignUpPage;\nexport default SignUpPage;\nvar _c;\n$RefreshReg$(_c, \"SignUpPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SignUpPage","_s","userId","setUserId","password","setPassword","name","setName","handleSignUp","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/scc9811/GitHub/CapstoneDesign_FrontEnd/src/pages/SignUpPage.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction SignUpPage() {\n  // 각 입력 필드의 상태를 관리하는 useState 훅을 사용합니다.\n  const [userId, setUserId] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n\n  // 회원가입 버튼을 클릭할 때 실행되는 함수입니다.\n  const handleSignUp = () => {\n    // 간단히 입력된 정보를 콘솔에 출력합니다.\n    console.log('ID:', userId);\n    console.log('Password:', password);\n    console.log('Name:', name);\n\n    // 여기에 실제 회원가입 로직을 구현할 수 있습니다.\n    // 서버로 회원가입 정보를 전송하거나, 다른 작업을 수행할 수 있습니다.\n  };\n\n  return (\n    <div>\n      <h2>회원가입</h2>\n      <div>\n        <label>\n          ID: \n          <input \n            type=\"text\" \n            value={userId} \n            onChange={(e) => setUserId(e.target.value)} \n          />\n        </label>\n      </div>\n      <div>\n        <label>\n          Password: \n          <input \n            type=\"password\" \n            value={password} \n            onChange={(e) => setPassword(e.target.value)} \n          />\n        </label>\n      </div>\n      <div>\n        <label>\n          이름: \n          <input \n            type=\"text\" \n            value={name} \n            onChange={(e) => setName(e.target.value)} \n          />\n        </label>\n      </div>\n      <button onClick={handleSignUp}>회원가입</button>\n    </div>\n  );\n}\n\nexport default SignUpPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}