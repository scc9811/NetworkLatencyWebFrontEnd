{"ast":null,"code":"var _jsxFileName = \"/Users/scc9811/GitHub/CapstoneDesign_FrontEnd/src/pages/FirewallGuidePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport image1 from '../assets/1.png';\nimport image2 from '../assets/2.png';\nimport image3 from '../assets/3.png';\nimport image4 from '../assets/4.png';\nimport image5 from '../assets/5.png';\nimport image6 from '../assets/6.png';\nimport image7 from '../assets/7.png';\nimport image8 from '../assets/8.png';\nimport image9 from '../assets/9.png';\nimport image10 from '../assets/10.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FirewallGuidePage = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const handleButtonClick = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/ping/isICMPInboundAllowed');\n      const data = await response.json();\n      console.log('allowed = ', data.allowed);\n      if (data.allowed) {\n        window.location.href = '/';\n      } else {\n        setMessage('방화벽 설정을 다시 확인해주세요.');\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setMessage('방화벽 설정을 다시 확인해주세요. ');\n    }\n  };\n  const styles = {\n    container: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100vh',\n      backgroundColor: '#f0f0f0',\n      fontFamily: 'Arial, sans-serif',\n      textAlign: 'center',\n      padding: '20px'\n    },\n    heading: {\n      top: '5%',\n      left: '5%',\n      position: 'absolute',\n      color: '#e5e5e5'\n    },\n    button: {\n      backgroundColor: '#007bff',\n      color: '#fff',\n      border: 'none',\n      padding: '10px 20px',\n      fontSize: '16px',\n      cursor: 'pointer',\n      borderRadius: '5px',\n      transition: 'background-color 0.3s'\n    },\n    buttonHover: {\n      backgroundColor: '#0056b3'\n    },\n    message: {\n      marginTop: '20px',\n      color: 'red',\n      fontSize: '14px'\n    }\n  };\n  const images = [image1, image2, image3, image4, image5, image6, image7, image8, image9, image10];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: styles.heading,\n      children: \"\\uC774\\uBBF8\\uC9C0 \\uC21C\\uC11C\\uB300\\uB85C \\uC124\\uC815\\uC744 \\uC9C4\\uD589\\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-container\",\n      children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: `Image ${index + 1}`,\n        className: \"gallery-image\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this)\n  // <div className='a'>\n  // <div className='gallery-container'> \n  //   <img src={image1} className='responsive-image' />\n  //     <img src={image2} className='responsive-image' />\n  //     <img src={image3} className='responsive-image' />\n  //     <img src={image4} className='responsive-image' />\n  //     <img src={image5} className='responsive-image' />\n  //     <img src={image6} className='responsive-image' />\n  //     <img src={image7} className='responsive-image' />\n  //     <img src={image8} className='responsive-image' />\n  //     <img src={image9} className='responsive-image' />\n  //     <img src={image10} className='responsive-image' />\n  // </div>\n\n  // </div>\n  // <div>\n  //   <h1 style={styles.heading}>이미지 순서대로 진행해주세요.</h1>\n\n  //   <button\n  //     style={styles.button}\n  //     onMouseOver={(e) => (e.currentTarget.style.backgroundColor = styles.buttonHover.backgroundColor)}\n  //     onMouseOut={(e) => (e.currentTarget.style.backgroundColor = styles.button.backgroundColor)}\n  //     onClick={handleButtonClick}\n  //   >\n  //     방화벽 설정 완료. <br />\n  //     다시 테스트 시도하기.\n  //   </button>\n  //   {message && <p style={styles.message}>{message}</p>}\n  // </div>\n  ;\n};\n_s(FirewallGuidePage, \"l8KXAebGu4sZHsyCIQX7P8si41w=\");\n_c = FirewallGuidePage;\nexport default FirewallGuidePage;\nvar _c;\n$RefreshReg$(_c, \"FirewallGuidePage\");","map":{"version":3,"names":["React","useState","image1","image2","image3","image4","image5","image6","image7","image8","image9","image10","jsxDEV","_jsxDEV","FirewallGuidePage","_s","message","setMessage","handleButtonClick","response","fetch","data","json","console","log","allowed","window","location","href","error","styles","container","display","flexDirection","alignItems","justifyContent","height","backgroundColor","fontFamily","textAlign","padding","heading","top","left","position","color","button","border","fontSize","cursor","borderRadius","transition","buttonHover","marginTop","images","children","style","fileName","_jsxFileName","lineNumber","columnNumber","className","map","image","index","src","alt","_c","$RefreshReg$"],"sources":["/Users/scc9811/GitHub/CapstoneDesign_FrontEnd/src/pages/FirewallGuidePage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport image1 from '../assets/1.png';\nimport image2 from '../assets/2.png';\nimport image3 from '../assets/3.png';\nimport image4 from '../assets/4.png';\nimport image5 from '../assets/5.png';\nimport image6 from '../assets/6.png';\nimport image7 from '../assets/7.png';\nimport image8 from '../assets/8.png';\nimport image9 from '../assets/9.png';\nimport image10 from '../assets/10.png';\n\n\n\nconst FirewallGuidePage = () => {\n  const [message, setMessage] = useState('');\n\n  const handleButtonClick = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/ping/isICMPInboundAllowed');\n      const data = await response.json();\n      console.log('allowed = ', data.allowed);\n      if (data.allowed) {\n        window.location.href = '/';\n      } else {\n        setMessage('방화벽 설정을 다시 확인해주세요.');\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setMessage('방화벽 설정을 다시 확인해주세요. ');\n    }\n  };\n\n  const styles = {\n\n    container: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100vh',\n      backgroundColor: '#f0f0f0',\n      fontFamily: 'Arial, sans-serif',\n      textAlign: 'center',\n      padding: '20px',\n    },\n    heading: {\n      top: '5%',\n    left: '5%',\n    position: 'absolute',\n    color: '#e5e5e5',\n    },\n    button: {\n      backgroundColor: '#007bff',\n      color: '#fff',\n      border: 'none',\n      padding: '10px 20px',\n      fontSize: '16px',\n      cursor: 'pointer',\n      borderRadius: '5px',\n      transition: 'background-color 0.3s',\n    },\n    buttonHover: {\n      backgroundColor: '#0056b3',\n    },\n    message: {\n      marginTop: '20px',\n      color: 'red',\n      fontSize: '14px',\n    },\n  };\n  const images = [\n    image1,\n    image2,\n    image3,\n    image4,\n    image5,\n    image6,\n    image7,\n    image8,\n    image9,\n    image10,\n  ];\n\n  return (\n    <div>\n      <h1 style={styles.heading}>이미지 순서대로 설정을 진행해주세요.</h1>\n      <div className=\"gallery-container\">\n        {images.map((image, index) => (\n          <img key={index} src={image} alt={`Image ${index + 1}`} className=\"gallery-image\" />\n        ))}\n      </div>\n    </div>\n    // <div className='a'>\n    // <div className='gallery-container'> \n    //   <img src={image1} className='responsive-image' />\n    //     <img src={image2} className='responsive-image' />\n    //     <img src={image3} className='responsive-image' />\n    //     <img src={image4} className='responsive-image' />\n    //     <img src={image5} className='responsive-image' />\n    //     <img src={image6} className='responsive-image' />\n    //     <img src={image7} className='responsive-image' />\n    //     <img src={image8} className='responsive-image' />\n    //     <img src={image9} className='responsive-image' />\n    //     <img src={image10} className='responsive-image' />\n    // </div>\n\n    // </div>\n    // <div>\n    //   <h1 style={styles.heading}>이미지 순서대로 진행해주세요.</h1>\n      \n    //   <button\n    //     style={styles.button}\n    //     onMouseOver={(e) => (e.currentTarget.style.backgroundColor = styles.buttonHover.backgroundColor)}\n    //     onMouseOut={(e) => (e.currentTarget.style.backgroundColor = styles.button.backgroundColor)}\n    //     onClick={handleButtonClick}\n    //   >\n    //     방화벽 설정 완료. <br />\n    //     다시 테스트 시도하기.\n    //   </button>\n    //   {message && <p style={styles.message}>{message}</p>}\n    // </div>\n  );\n};\n\nexport default FirewallGuidePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}