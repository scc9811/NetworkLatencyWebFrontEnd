{"ast":null,"code":"var _jsxFileName = \"/Users/scc9811/GitHub/CapstoneDesign_FrontEnd/src/pages/SignInPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignInPage() {\n  _s();\n  // 각 입력 필드의 상태를 관리하는 useState 훅 사용.\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  // 로그인 버튼 클릭 시 실행.\n  const handleSignIn = () => {\n    const loginData = {\n      email: email,\n      password: password\n    };\n    fetch('http://localhost:8080/user/signIn', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(loginData)\n    }).then(response => response.json()).then(data => {\n      console.log('로그인 결과:', data);\n      if (data.result === true) {\n        // 로그인 성공 시 메인 페이지로 리디렉션\n        window.location.href = '/';\n      } else {\n        // 로그인 실패 시 알림창 띄우기\n        alert('로그인 실패. 이메일 또는 비밀번호를 확인해주세요.');\n      }\n    }).catch(error => {\n      console.error('로그인 오류:', error);\n    });\n\n    // 여기에 로직 추가 가능.    \n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignIn,\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(SignInPage, \"TSZhDBNy8CmbxXgprY/vvMmTG1Q=\");\n_c = SignInPage;\nexport default SignInPage;\nvar _c;\n$RefreshReg$(_c, \"SignInPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SignInPage","_s","email","setEmail","password","setPassword","handleSignIn","loginData","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","result","window","location","href","alert","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/scc9811/GitHub/CapstoneDesign_FrontEnd/src/pages/SignInPage.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction SignInPage() {\n  // 각 입력 필드의 상태를 관리하는 useState 훅 사용.\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  // 로그인 버튼 클릭 시 실행.\n  const handleSignIn = () => {\n    const loginData = {\n        email: email,\n        password: password\n    };\n    fetch('http://localhost:8080/user/signIn', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(loginData)\n    })\n    .then(response => response.json())\n    .then(data => {\n        console.log('로그인 결과:', data);\n        if (data.result === true) {\n            // 로그인 성공 시 메인 페이지로 리디렉션\n            window.location.href = '/';\n        } else {\n            // 로그인 실패 시 알림창 띄우기\n            alert('로그인 실패. 이메일 또는 비밀번호를 확인해주세요.');\n        }\n    })\n    .catch(error => {\n        console.error('로그인 오류:', error);\n    });\n\n    // 여기에 로직 추가 가능.    \n\n  };\n\n  return (\n    <div>\n      <h2>로그인</h2>\n\n      <div>\n        <label>\n          email: \n          <input \n            type=\"text\" \n            value={email} \n            onChange={(e) => setEmail(e.target.value)} \n          />\n        </label>\n      </div>\n\n      <div>\n        <label>\n          Password: \n          <input \n            type=\"password\" \n            value={password} \n            onChange={(e) => setPassword(e.target.value)} \n          />\n        </label>\n      </div>\n\n      <button onClick={handleSignIn}>로그인</button>\n    </div>\n  );\n}\n\nexport default SignInPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}