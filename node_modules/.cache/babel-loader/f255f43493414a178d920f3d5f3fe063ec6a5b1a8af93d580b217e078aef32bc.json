{"ast":null,"code":"var _jsxFileName = \"/Users/scc9811/GitHub/CapstoneDesign_FrontEnd/src/pages/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainPage() {\n  _s();\n  const [socketData, setSocketData] = useState(null);\n  const [isAllowed, setIsAllowed] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/ping/isICMPInboundAllowed');\n        const data = await response.json();\n        setIsAllowed(data.allowed);\n        console.log('data.allowed = ', data.allowed);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (isAllowed === null) return;\n    if (!isAllowed) {\n      // allowed가 false인 경우 guidePage로 리다이렉트\n      window.location.href = '/guidePage';\n      return;\n    }\n\n    // WebSocket 연결\n    const ws = new WebSocket('ws://localhost:8080/socketConnection');\n\n    // 소켓 연결될 때 실행되는 함수\n    ws.onopen = () => {\n      console.log('WebSocket connected');\n    };\n\n    // 메시지를 수신할 때 실행되는 함수\n    ws.onmessage = event => {\n      const data = JSON.parse(event.data);\n      setSocketData(data);\n    };\n\n    // 컴포넌트가 언마운트될 때 WebSocket 연결 해제\n    return () => {\n      ws.close();\n    };\n  }, [isAllowed]);\n  if (isAllowed === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n  if (!socketData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  }\n\n  // return (\n  //   <div>\n  //     <h1>averageResponseTime: {socketData.averageResponseTime}</h1>\n  //     {socketData.running ? null : (\n  //       <h1>packetLossRate: {socketData.packetLossRate}</h1>\n  //     )}\n  //   </div>\n  // );\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"averageResponseTime: \", socketData.averageResponseTime]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), socketData.running ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"packetLossRate: \", socketData.packetLossRate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          const {\n            averageResponseTime\n          } = socketData;\n          // Save averageResponseTime to localStorage\n          localStorage.setItem('averageResponseTime', averageResponseTime);\n\n          // Check if token exists in localStorage\n          const token = localStorage.getItem('token');\n\n          // if (token) --> 바꿔야됨.\n          console.log('token : ', token);\n          if (token) {\n            // token 있으면 --> 백엔드 서버로 userEmail, nickName 요청 가능.\n            try {\n              const response = await fetch('http://localhost:8080/ping/storeResult', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': `Bearer ${token}`\n                },\n                body: JSON.stringify({\n                  averageResponseTime\n                })\n              });\n              if (!response.ok) {\n                // throw new Error('Network response was not ok');\n                alert('로그인이 필요합니다');\n                window.location.href = '/user/signIn';\n              }\n\n              // const data = await response.json();\n              // console.log('Response data:', data);\n              alert('저장 완료');\n            } catch (error) {\n              alert('로그인이 필요합니다');\n              window.location.href = '/user/signIn';\n              // console.error('Error sending data:', error);\n            }\n          } else {\n            // console.error('No token found in localStorage');\n            window.location.href = '/user/signIn';\n          }\n        },\n        children: \"\\uACB0\\uACFC \\uC800\\uC7A5\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(MainPage, \"eYpJQCtv9gBnu3f3hxWe6HF+vb0=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MainPage","_s","socketData","setSocketData","isAllowed","setIsAllowed","fetchData","response","fetch","data","json","allowed","console","log","error","window","location","href","ws","WebSocket","onopen","onmessage","event","JSON","parse","close","children","fileName","_jsxFileName","lineNumber","columnNumber","averageResponseTime","running","packetLossRate","onClick","localStorage","setItem","token","getItem","method","headers","body","stringify","ok","alert","_c","$RefreshReg$"],"sources":["/Users/scc9811/GitHub/CapstoneDesign_FrontEnd/src/pages/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction MainPage() {\n  const [socketData, setSocketData] = useState(null);\n  const [isAllowed, setIsAllowed] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/ping/isICMPInboundAllowed');\n        const data = await response.json();\n        setIsAllowed(data.allowed);\n        console.log('data.allowed = ', data.allowed);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (isAllowed === null) return;\n\n    if (!isAllowed) {\n      // allowed가 false인 경우 guidePage로 리다이렉트\n      window.location.href = '/guidePage';\n      return;\n    }\n\n    // WebSocket 연결\n    const ws = new WebSocket('ws://localhost:8080/socketConnection');\n\n    // 소켓 연결될 때 실행되는 함수\n    ws.onopen = () => {\n      console.log('WebSocket connected');\n    };\n\n    // 메시지를 수신할 때 실행되는 함수\n    ws.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      setSocketData(data);\n    };\n\n    // 컴포넌트가 언마운트될 때 WebSocket 연결 해제\n    return () => {\n      ws.close();\n    };\n  }, [isAllowed]);\n\n  if (isAllowed === null) {\n    return <div>Loading...</div>;\n  }\n\n  if (!socketData) {\n    return <div>Loading...</div>;\n  }\n\n  // return (\n  //   <div>\n  //     <h1>averageResponseTime: {socketData.averageResponseTime}</h1>\n  //     {socketData.running ? null : (\n  //       <h1>packetLossRate: {socketData.packetLossRate}</h1>\n  //     )}\n  //   </div>\n  // );\n  return (\n    <div>\n      <form></form>\n      <h1>averageResponseTime: {socketData.averageResponseTime}</h1>\n      {socketData.running ? null : (\n        <div>\n          <h1>packetLossRate: {socketData.packetLossRate}</h1>\n          <button\n            onClick={async () => {\n              const { averageResponseTime } = socketData;\n              // Save averageResponseTime to localStorage\n              localStorage.setItem('averageResponseTime', averageResponseTime);\n  \n              // Check if token exists in localStorage\n              const token = localStorage.getItem('token');\n  \n              // if (token) --> 바꿔야됨.\n              console.log('token : ', token);\n              if (token) {\n                // token 있으면 --> 백엔드 서버로 userEmail, nickName 요청 가능.\n                try {\n                  const response = await fetch('http://localhost:8080/ping/storeResult', {\n                    method: 'POST',\n                    headers: {\n                      'Content-Type': 'application/json',\n                      'Authorization': `Bearer ${token}`\n                    },\n                    body: JSON.stringify({ averageResponseTime })\n                  });\n  \n                  if (!response.ok) {\n                    // throw new Error('Network response was not ok');\n                    alert('로그인이 필요합니다');\n                    window.location.href = '/user/signIn';\n                  }\n  \n                  // const data = await response.json();\n                  // console.log('Response data:', data);\n                  alert('저장 완료');\n                } catch (error) {\n                  alert('로그인이 필요합니다');\n                    window.location.href = '/user/signIn';\n                  // console.error('Error sending data:', error);\n                }\n              } else {\n                // console.error('No token found in localStorage');\n                window.location.href = '/user/signIn';\n              }\n            }}\n          >\n            결과 저장하기\n          </button>\n        </div>\n      )}\n    </div>\n  );\n  \n}\n\nexport default MainPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}