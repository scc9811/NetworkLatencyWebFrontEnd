{"ast":null,"code":"var _jsxFileName = \"/Users/scc9811/GitHub/CapstoneDesign_FrontEnd/src/App.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport MainPage from './pages/mainPage.js';\nimport Page2 from './pages/page2.js';\nimport PingTestPage from './pages/pingTestPage.js';\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\n// function App() {\n//   return (\n//     <Router>\n//       <Routes>\n//         <Route path=\"/a\" element={<Page1/>} />\n//         <Route path=\"/b\" element={<Page2/>} />\n//       </Routes>\n//     </Router>\n//   );\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isICMPInboundAllowed, setIsICMPInboundAllowed] = useState(null);\n  const [clientIP, setClientIP] = useState(null);\n  const clientIPRequest = async () => {\n    const response = await axios.post('http://54.180.83.143:8080/ping/getClientIP');\n    const {\n      data\n    } = response;\n    setClientIP(data);\n  };\n\n  // 클라이언트 요청 함수\n  const handleRequest = async () => {\n    try {\n      const response = await axios.post('http://localhost:8080/ping/isICMPInboundAllowed');\n      // console.log(response)\n      const {\n        data\n      } = response;\n      setIsICMPInboundAllowed(data); // 요청 결과에 따라 상태를 업데이트\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setIsICMPInboundAllowed(false); // 요청 실패 시 false로 설정\n    }\n  };\n\n  // 페이지 변경 함수\n  const renderPage = () => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: clientIP\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n    return PingTestPage;\n    // if (isICMPInboundAllowed === null) {\n    //   return <p>Loading...</p>; // 요청이 아직 완료되지 않은 경우\n    // } else if (isICMPInboundAllowed === true) {\n    //   return <MainPage />; // true일 때 page1 반환\n    // } else {\n    //   return <Page2 />; // false일 때 page2 반환\n    // }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clientIPRequest,\n      children: \"request clientIP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRequest,\n      children: \"Send Request\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), renderPage()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"5BHXgFYBkfRK0XE1fYGj3xpnjbk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Route","Routes","MainPage","Page2","PingTestPage","React","useState","axios","jsxDEV","_jsxDEV","App","_s","isICMPInboundAllowed","setIsICMPInboundAllowed","clientIP","setClientIP","clientIPRequest","response","post","data","handleRequest","error","console","renderPage","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/scc9811/GitHub/CapstoneDesign_FrontEnd/src/App.js"],"sourcesContent":["// import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport MainPage from './pages/mainPage.js';\nimport Page2 from './pages/page2.js';\nimport PingTestPage from './pages/pingTestPage.js';\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\n\n// function App() {\n//   return (\n//     <Router>\n//       <Routes>\n//         <Route path=\"/a\" element={<Page1/>} />\n//         <Route path=\"/b\" element={<Page2/>} />\n//       </Routes>\n//     </Router>\n//   );\n// }\n\n\nconst App = () => {\n  const [isICMPInboundAllowed, setIsICMPInboundAllowed] = useState(null);\n  const [clientIP, setClientIP] = useState(null);\n  const clientIPRequest = async () => {\n    const response = await axios.post('http://54.180.83.143:8080/ping/getClientIP');\n    const { data } = response;\n    setClientIP(data);\n    \n  }\n\n  // 클라이언트 요청 함수\n  const handleRequest = async () => {\n    try {\n      const response = await axios.post('http://localhost:8080/ping/isICMPInboundAllowed');\n      // console.log(response)\n      const { data } = response;\n      setIsICMPInboundAllowed(data); // 요청 결과에 따라 상태를 업데이트\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setIsICMPInboundAllowed(false); // 요청 실패 시 false로 설정\n    }\n    \n  };\n\n  // 페이지 변경 함수\n  const renderPage = () => {\n    return <p>{clientIP}</p>  \n    return PingTestPage\n    // if (isICMPInboundAllowed === null) {\n    //   return <p>Loading...</p>; // 요청이 아직 완료되지 않은 경우\n    // } else if (isICMPInboundAllowed === true) {\n    //   return <MainPage />; // true일 때 page1 반환\n    // } else {\n    //   return <Page2 />; // false일 때 page2 반환\n    // }\n  \n\n\n  };\n\n  return (\n    <div>\n      <button onClick={clientIPRequest}>request clientIP</button>\n      <button onClick={handleRequest}>Send Request</button>\n      {renderPage()}\n    </div>\n  );\n};\n\n\n\n\nexport default App;"],"mappings":";;AAAA;AACA,SAASA,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,KAAK,MAAM,kBAAkB;AACpC,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;;AAGzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtE,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAMU,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,4CAA4C,CAAC;IAC/E,MAAM;MAAEC;IAAK,CAAC,GAAGF,QAAQ;IACzBF,WAAW,CAACI,IAAI,CAAC;EAEnB,CAAC;;EAED;EACA,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMH,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,iDAAiD,CAAC;MACpF;MACA,MAAM;QAAEC;MAAK,CAAC,GAAGF,QAAQ;MACzBJ,uBAAuB,CAACM,IAAI,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CR,uBAAuB,CAAC,KAAK,CAAC,CAAC,CAAC;IAClC;EAEF,CAAC;;EAED;EACA,MAAMU,UAAU,GAAGA,CAAA,KAAM;IACvB,oBAAOd,OAAA;MAAAe,QAAA,EAAIV;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;IACxB,OAAOxB,YAAY;IACnB;IACA;IACA;IACA;IACA;IACA;IACA;EAIF,CAAC;EAED,oBACEK,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAQoB,OAAO,EAAEb,eAAgB;MAAAQ,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3DnB,OAAA;MAAQoB,OAAO,EAAET,aAAc;MAAAI,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACpDL,UAAU,CAAC,CAAC;EAAA;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV,CAAC;AAACjB,EAAA,CA/CID,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAoDT,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}