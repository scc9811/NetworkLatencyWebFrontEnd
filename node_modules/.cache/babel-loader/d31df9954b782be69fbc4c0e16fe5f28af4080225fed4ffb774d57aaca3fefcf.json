{"ast":null,"code":"var _jsxFileName = \"/Users/scc9811/GitHub/CapstoneDesign_FrontEnd/src/App.js\";\n// import React from 'react';\nimport MainPage from './pages/MainPage.js';\nimport Page2 from './pages/page2.js';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport SignUpPage from './pages/SignUpPage.js';\nimport SignInPage from './pages/SignInPage.js';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n// const App = () => {\n//   const [isAllowed, setIsAllowed] = useState(null);\n\n//   useEffect(() => {\n//     // POST 요청 보내기\n//     // axios.post('http://scc9811.site:8080/ping/isICMPInboundAllowed')\n//     axios.post('http://localhost:8080/ping/isICMPInboundAllowed')\n//       .then(response => {\n//         setIsAllowed(response.data.allowed);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching data:', error);\n//       });\n//   }, []); // 컴포넌트가 마운트될 때 한 번만 실행되도록 빈 배열을 두 번째 매개변수로 전달\n\n//   return <SignUpPage />;\n//   // if (isAllowed == null) {\n//   //   // 데이터가 로딩 중일 때 보여줄 화면\n//   //   return <div>Loading...</div>;\n//   // } else if (isAllowed) {\n//   //   // isAllowed가 true일 때 보여줄 화면\n//   //   return <MainPage />;\n//   // } else {\n//   //   // isAllowed가 false일 때 보여줄 화면\n//   //   return <Page2 />;\n//   // }\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/user/signUp\",\n          component: SignUpPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/user/login\",\n          component: SignInPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"\\uD648 \\uD398\\uC774\\uC9C0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["MainPage","Page2","React","useState","useEffect","axios","SignUpPage","SignInPage","BrowserRouter","Router","Route","Switch","jsxDEV","_jsxDEV","App","children","path","component","fileName","_jsxFileName","lineNumber","columnNumber","exact","_c","$RefreshReg$"],"sources":["/Users/scc9811/GitHub/CapstoneDesign_FrontEnd/src/App.js"],"sourcesContent":["// import React from 'react';\nimport MainPage from './pages/MainPage.js';\nimport Page2 from './pages/page2.js';\nimport React, { useState , useEffect } from 'react';\nimport axios from 'axios';\nimport SignUpPage from './pages/SignUpPage.js';\nimport SignInPage from './pages/SignInPage.js';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n\n\n\n\n\n// const App = () => {\n//   const [isAllowed, setIsAllowed] = useState(null);\n\n//   useEffect(() => {\n//     // POST 요청 보내기\n//     // axios.post('http://scc9811.site:8080/ping/isICMPInboundAllowed')\n//     axios.post('http://localhost:8080/ping/isICMPInboundAllowed')\n//       .then(response => {\n//         setIsAllowed(response.data.allowed);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching data:', error);\n//       });\n//   }, []); // 컴포넌트가 마운트될 때 한 번만 실행되도록 빈 배열을 두 번째 매개변수로 전달\n\n\n//   return <SignUpPage />;\n//   // if (isAllowed == null) {\n//   //   // 데이터가 로딩 중일 때 보여줄 화면\n//   //   return <div>Loading...</div>;\n//   // } else if (isAllowed) {\n//   //   // isAllowed가 true일 때 보여줄 화면\n//   //   return <MainPage />;\n//   // } else {\n//   //   // isAllowed가 false일 때 보여줄 화면\n//   //   return <Page2 />;\n//   // }\n// };\n\n\nconst App = () => {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/user/signUp\" component={SignUpPage} />\n          <Route path=\"/user/login\" component={SignInPage} />\n          {/* 다른 경로를 추가할 수 있습니다 */}\n          <Route path=\"/\" exact>\n            <h1>홈 페이지</h1>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n\n\nexport default App;"],"mappings":";AAAA;AACA,OAAOA,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,KAAK,MAAM,kBAAkB;AACpC,OAAOC,KAAK,IAAIC,QAAQ,EAAGC,SAAS,QAAQ,OAAO;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;;AAOzE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACED,OAAA,CAACJ,MAAM;IAAAM,QAAA,eACLF,OAAA;MAAAE,QAAA,eACEF,OAAA,CAACF,MAAM;QAAAI,QAAA,gBACLF,OAAA,CAACH,KAAK;UAACM,IAAI,EAAC,cAAc;UAACC,SAAS,EAAEX;QAAW;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACpDR,OAAA,CAACH,KAAK;UAACM,IAAI,EAAC,aAAa;UAACC,SAAS,EAAEV;QAAW;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAEnDR,OAAA,CAACH,KAAK;UAACM,IAAI,EAAC,GAAG;UAACM,KAAK;UAAAP,QAAA,eACnBF,OAAA;YAAAE,QAAA,EAAI;UAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;AAAAE,EAAA,GAfKT,GAAG;AAmBT,eAAeA,GAAG;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}