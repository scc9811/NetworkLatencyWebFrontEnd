{"ast":null,"code":"var _jsxFileName = \"/Users/scc9811/GitHub/CapstoneDesign_FrontEnd/src/App.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\nimport MainPage from './pages/MainPage.js';\nimport Page2 from './pages/page2.js';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport PingTestPage from './pages/PingTestPage.js';\nimport SignUpPage from './pages/SignUpPage.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isAllowed, setIsAllowed] = useState(null);\n  useEffect(() => {\n    // POST 요청 보내기\n    // axios.post('http://scc9811.site:8080/ping/isICMPInboundAllowed')\n    axios.post('http://localhost:8080/ping/isICMPInboundAllowed').then(response => {\n      setIsAllowed(response.data.allowed);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []); // 컴포넌트가 마운트될 때 한 번만 실행되도록 빈 배열을 두 번째 매개변수로 전달\n\n  return /*#__PURE__*/_jsxDEV(SignUpPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n  // if (isAllowed == null) {\n  //   // 데이터가 로딩 중일 때 보여줄 화면\n  //   return <div>Loading...</div>;\n  // } else if (isAllowed) {\n  //   // isAllowed가 true일 때 보여줄 화면\n  //   return <MainPage />;\n  // } else {\n  //   // isAllowed가 false일 때 보여줄 화면\n  //   return <Page2 />;\n  // }\n};\n_s(App, \"Pf2m5PS3ZsPHU22acdtmt28fBIM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["MainPage","Page2","React","useState","useEffect","axios","PingTestPage","SignUpPage","jsxDEV","_jsxDEV","App","_s","isAllowed","setIsAllowed","post","then","response","data","allowed","catch","error","console","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/scc9811/GitHub/CapstoneDesign_FrontEnd/src/App.js"],"sourcesContent":["// import React from 'react';\nimport MainPage from './pages/MainPage.js';\nimport Page2 from './pages/page2.js';\nimport React, { useState , useEffect } from 'react';\nimport axios from 'axios';\nimport PingTestPage from './pages/PingTestPage.js';\nimport SignUpPage from './pages/SignUpPage.js';\n\n\n\n\n\nconst App = () => {\n  const [isAllowed, setIsAllowed] = useState(null);\n\n  useEffect(() => {\n    // POST 요청 보내기\n    // axios.post('http://scc9811.site:8080/ping/isICMPInboundAllowed')\n    axios.post('http://localhost:8080/ping/isICMPInboundAllowed')\n      .then(response => {\n        setIsAllowed(response.data.allowed);\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n      });\n  }, []); // 컴포넌트가 마운트될 때 한 번만 실행되도록 빈 배열을 두 번째 매개변수로 전달\n\n\n  return <SignUpPage />;\n  // if (isAllowed == null) {\n  //   // 데이터가 로딩 중일 때 보여줄 화면\n  //   return <div>Loading...</div>;\n  // } else if (isAllowed) {\n  //   // isAllowed가 true일 때 보여줄 화면\n  //   return <MainPage />;\n  // } else {\n  //   // isAllowed가 false일 때 보여줄 화면\n  //   return <Page2 />;\n  // }\n};\n\n\n\nexport default App;"],"mappings":";;AAAA;AACA,OAAOA,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,KAAK,MAAM,kBAAkB;AACpC,OAAOC,KAAK,IAAIC,QAAQ,EAAGC,SAAS,QAAQ,OAAO;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,UAAU,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM/C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACA;IACAC,KAAK,CAACS,IAAI,CAAC,iDAAiD,CAAC,CAC1DC,IAAI,CAACC,QAAQ,IAAI;MAChBH,YAAY,CAACG,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC;IACrC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAGR,oBAAOX,OAAA,CAACF,UAAU;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACrB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;AAACd,EAAA,CA3BID,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AA+BT,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}