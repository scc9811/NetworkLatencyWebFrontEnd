{"ast":null,"code":"var _jsxFileName = \"/Users/scc9811/GitHub/CapstoneDesign_FrontEnd/src/pages/SignUpPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignUpPage() {\n  _s();\n  // 각 입력 필드의 상태를 관리하는 useState 훅 사용.\n  const [nickName, setNickName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  // 회원가입 버튼 클릭 시 실행.\n  const handleSignUp = async event => {\n    event.preventDefault(); // Prevents the default form submission behavior\n\n    const userData = {\n      email: email,\n      password: password,\n      nickName: nickName\n    };\n    try {\n      const response = await fetch('http://localhost:8080/user/signUp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      const data = await response.json();\n      console.log('회원가입 결과:', data);\n      if (data.result == true) {\n        // 회원가입 성공 시 로그인 페이지로 리디렉션\n        window.location.href = '/user/signIn';\n      } else {\n        // 회원가입 실패 시 알림창 띄우기\n        alert('이미 가입된 이메일입니다.\\n다시 확인해주세요.');\n      }\n    } catch (error) {\n      alert('이미 가입된 이메일입니다.\\n다시 확인해주세요.');\n    }\n  };\n\n  // 회원가입 버튼 클릭 시 실행.\n  // const handleSignUp = (event) => {\n  //   event.preventDefault();\n  //   const userData = {\n  //       email: email,\n  //       password: password,\n  //       nickName: nickName\n  //   };\n  //   try{\n  //     fetch('http://localhost:8080/user/signUp', {\n  //       method: 'POST',\n  //       headers: {\n  //           'Content-Type': 'application/json'\n  //       },\n  //       body: JSON.stringify(userData)\n  //     })\n  //     .then(console.log(\"HHHHHHH\"))\n  //   .then(response => response.json())\n  //   .then(data => {\n  //       console.log('회원가입 결과:', data);\n  //       if (data.result == true) {\n  //           // 회원가입 성공 시 로그인 페이지로 리디렉션\n  //           window.location.href = '/user/signIn';\n  //       } else {\n  //           // 회원가입 실패 시 알림창 띄우기\n  //           alert('data : ', data);\n  //           alert('이미 가입된 이메일입니다.\\n다시 확인해주세요.');\n  //       }\n  //     });\n\n  //   }\n  //   catch {\n  //     alert('error');\n  //   }\n\n  //   // .catch(error => {\n  //   //   console.log(error);\n  //   //   // alert('이미 가입된 이메일입니다.\\n다시 확인해주세요.');\n  //   // });\n\n  //   // 여기에 로직 추가 가능.    \n\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shape\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shape\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        height: '550px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"SignUp Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"NickName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"NickName\",\n        value: nickName,\n        onChange: e => setNickName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSignUp,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(SignUpPage, \"77E1rG4fCmaQoHDhWQS8/iyT4aU=\");\n_c = SignUpPage;\nexport default SignUpPage;\nvar _c;\n$RefreshReg$(_c, \"SignUpPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SignUpPage","_s","nickName","setNickName","email","setEmail","password","setPassword","handleSignUp","event","preventDefault","userData","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","result","window","location","href","alert","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","height","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/scc9811/GitHub/CapstoneDesign_FrontEnd/src/pages/SignUpPage.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction SignUpPage() {\n  // 각 입력 필드의 상태를 관리하는 useState 훅 사용.\n  const [nickName, setNickName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  // 회원가입 버튼 클릭 시 실행.\n  const handleSignUp = async (event) => {\n    event.preventDefault(); // Prevents the default form submission behavior\n\n    const userData = {\n      email: email,\n      password: password,\n      nickName: nickName\n    };\n\n    try {\n      const response = await fetch('http://localhost:8080/user/signUp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n\n      const data = await response.json();\n      console.log('회원가입 결과:', data);\n\n      if (data.result == true) {\n        // 회원가입 성공 시 로그인 페이지로 리디렉션\n        window.location.href = '/user/signIn';\n      } else {\n        // 회원가입 실패 시 알림창 띄우기\n        alert('이미 가입된 이메일입니다.\\n다시 확인해주세요.');\n      }\n    } catch (error) {\n      alert('이미 가입된 이메일입니다.\\n다시 확인해주세요.');\n    }\n  };\n\n  // 회원가입 버튼 클릭 시 실행.\n  // const handleSignUp = (event) => {\n  //   event.preventDefault();\n  //   const userData = {\n  //       email: email,\n  //       password: password,\n  //       nickName: nickName\n  //   };\n  //   try{\n  //     fetch('http://localhost:8080/user/signUp', {\n  //       method: 'POST',\n  //       headers: {\n  //           'Content-Type': 'application/json'\n  //       },\n  //       body: JSON.stringify(userData)\n  //     })\n  //     .then(console.log(\"HHHHHHH\"))\n  //   .then(response => response.json())\n  //   .then(data => {\n  //       console.log('회원가입 결과:', data);\n  //       if (data.result == true) {\n  //           // 회원가입 성공 시 로그인 페이지로 리디렉션\n  //           window.location.href = '/user/signIn';\n  //       } else {\n  //           // 회원가입 실패 시 알림창 띄우기\n  //           alert('data : ', data);\n  //           alert('이미 가입된 이메일입니다.\\n다시 확인해주세요.');\n  //       }\n  //     });\n      \n  //   }\n  //   catch {\n  //     alert('error');\n  //   }\n    \n  //   // .catch(error => {\n  //   //   console.log(error);\n  //   //   // alert('이미 가입된 이메일입니다.\\n다시 확인해주세요.');\n  //   // });\n\n  //   // 여기에 로직 추가 가능.    \n\n  // };\n\n  return (\n    <div>\n      <div className=\"background\">\n        <div className=\"shape\"></div>\n        <div className=\"shape\"></div>\n      </div>\n      <form style={{height: '550px'}}>\n        <h4>SignUp Here</h4>\n\n        <label>Email</label>\n        <input type=\"text\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n\n        <label>Password</label>\n        <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\n\n        <label>NickName</label>\n        <input type=\"text\" placeholder=\"NickName\" value={nickName} onChange={(e) => setNickName(e.target.value)} />\n\n        <button onClick={handleSignUp}>Sign Up</button>\n      </form>\n    </div>\n  );\n}\n\nexport default SignUpPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAMW,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;;IAExB,MAAMC,QAAQ,GAAG;MACfP,KAAK,EAAEA,KAAK;MACZE,QAAQ,EAAEA,QAAQ;MAClBJ,QAAQ,EAAEA;IACZ,CAAC;IAED,IAAI;MACF,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QAChEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;MAC/B,CAAC,CAAC;MAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,IAAI,CAAC;MAE7B,IAAIA,IAAI,CAACI,MAAM,IAAI,IAAI,EAAE;QACvB;QACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,cAAc;MACvC,CAAC,MAAM;QACL;QACAC,KAAK,CAAC,4BAA4B,CAAC;MACrC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdD,KAAK,CAAC,4BAA4B,CAAC;IACrC;EACF,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;;EAEA;;EAEA,oBACE5B,OAAA;IAAA8B,QAAA,gBACE9B,OAAA;MAAK+B,SAAS,EAAC,YAAY;MAAAD,QAAA,gBACzB9B,OAAA;QAAK+B,SAAS,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC7BnC,OAAA;QAAK+B,SAAS,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACNnC,OAAA;MAAMoC,KAAK,EAAE;QAACC,MAAM,EAAE;MAAO,CAAE;MAAAP,QAAA,gBAC7B9B,OAAA;QAAA8B,QAAA,EAAI;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEpBnC,OAAA;QAAA8B,QAAA,EAAO;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpBnC,OAAA;QAAOsC,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,OAAO;QAACC,KAAK,EAAEnC,KAAM;QAACoC,QAAQ,EAAGC,CAAC,IAAKpC,QAAQ,CAACoC,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAElGnC,OAAA;QAAA8B,QAAA,EAAO;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvBnC,OAAA;QAAOsC,IAAI,EAAC,UAAU;QAACC,WAAW,EAAC,UAAU;QAACC,KAAK,EAAEjC,QAAS;QAACkC,QAAQ,EAAGC,CAAC,IAAKlC,WAAW,CAACkC,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAE9GnC,OAAA;QAAA8B,QAAA,EAAO;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvBnC,OAAA;QAAOsC,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,UAAU;QAACC,KAAK,EAAErC,QAAS;QAACsC,QAAQ,EAAGC,CAAC,IAAKtC,WAAW,CAACsC,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAE3GnC,OAAA;QAAQ4C,OAAO,EAAEnC,YAAa;QAAAqB,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACjC,EAAA,CA1GQD,UAAU;AAAA4C,EAAA,GAAV5C,UAAU;AA4GnB,eAAeA,UAAU;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}