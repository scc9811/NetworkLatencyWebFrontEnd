{"ast":null,"code":"var _jsxFileName = \"/Users/scc9811/Desktop/FrontServer/server/src/App.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Page1 from './pages/page1.js';\nimport Page2 from './pages/page2.js';\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\n// function App() {\n//   return (\n//     <Router>\n//       <Routes>\n//         <Route path=\"/a\" element={<Page1/>} />\n//         <Route path=\"/b\" element={<Page2/>} />\n//       </Routes>\n//     </Router>\n//   );\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isICMPInboundAllowed, setIsICMPInboundAllowed] = useState(null);\n\n  // 클라이언트가 요청하는 함수\n  const handleRequest = async () => {\n    try {\n      const response = await axios.post('http://localhost:8080/ping/isICMPInboundAllowed');\n      const {\n        data\n      } = response;\n      setIsICMPInboundAllowed(data); // 요청 결과에 따라 상태를 업데이트\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setIsICMPInboundAllowed(false); // 요청 실패 시 false로 설정\n    }\n    console.log(isICMPInboundAllowed);\n  };\n\n  // 페이지 변경 함수\n  const renderPage = () => {\n    if (isICMPInboundAllowed === null) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 14\n      }, this); // 요청이 아직 완료되지 않은 경우\n    } else if (isICMPInboundAllowed === true) {\n      return /*#__PURE__*/_jsxDEV(Page1, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }, this); // true일 때 page1 반환\n    } else {\n      return /*#__PURE__*/_jsxDEV(Page2, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 14\n      }, this); // false일 때 page2 반환\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRequest,\n      children: \"Send Request\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), renderPage()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n// const Page1 = () => {\n//   return <h1>Page 1</h1>;\n// };\n\n// const Page2 = () => {\n//   return <h1>Page 2</h1>;\n// };\n_s(App, \"36LkGfYe8wSNOsjh7FI76r3lWIU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Route","Routes","Page1","Page2","React","useState","axios","jsxDEV","_jsxDEV","App","_s","isICMPInboundAllowed","setIsICMPInboundAllowed","handleRequest","response","post","data","error","console","log","renderPage","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/scc9811/Desktop/FrontServer/server/src/App.js"],"sourcesContent":["// import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Page1 from './pages/page1.js';\nimport Page2 from './pages/page2.js';\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\n\n// function App() {\n//   return (\n//     <Router>\n//       <Routes>\n//         <Route path=\"/a\" element={<Page1/>} />\n//         <Route path=\"/b\" element={<Page2/>} />\n//       </Routes>\n//     </Router>\n//   );\n// }\n\n\nconst App = () => {\n  const [isICMPInboundAllowed, setIsICMPInboundAllowed] = useState(null);\n\n  // 클라이언트가 요청하는 함수\n  const handleRequest = async () => {\n    try {\n      const response = await axios.post('http://localhost:8080/ping/isICMPInboundAllowed');\n      const { data } = response;\n      setIsICMPInboundAllowed(data); // 요청 결과에 따라 상태를 업데이트\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setIsICMPInboundAllowed(false); // 요청 실패 시 false로 설정\n    }\n    console.log(isICMPInboundAllowed);\n  };\n\n  // 페이지 변경 함수\n  const renderPage = () => {\n    if (isICMPInboundAllowed === null) {\n      return <p>Loading...</p>; // 요청이 아직 완료되지 않은 경우\n    } else if (isICMPInboundAllowed === true) {\n      return <Page1 />; // true일 때 page1 반환\n    } else {\n      return <Page2 />; // false일 때 page2 반환\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={handleRequest}>Send Request</button>\n      {renderPage()}\n    </div>\n  );\n};\n\n// const Page1 = () => {\n//   return <h1>Page 1</h1>;\n// };\n\n// const Page2 = () => {\n//   return <h1>Page 2</h1>;\n// };\n\n\n\nexport default App;"],"mappings":";;AAAA;AACA,SAASA,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,KAAK,MAAM,kBAAkB;AACpC,OAAOC,KAAK,MAAM,kBAAkB;AACpC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;;AAGzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;;EAEtE;EACA,MAAMQ,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,iDAAiD,CAAC;MACpF,MAAM;QAAEC;MAAK,CAAC,GAAGF,QAAQ;MACzBF,uBAAuB,CAACI,IAAI,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CL,uBAAuB,CAAC,KAAK,CAAC,CAAC,CAAC;IAClC;IACAM,OAAO,CAACC,GAAG,CAACR,oBAAoB,CAAC;EACnC,CAAC;;EAED;EACA,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIT,oBAAoB,KAAK,IAAI,EAAE;MACjC,oBAAOH,OAAA;QAAAa,QAAA,EAAG;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,CAAC,CAAC;IAC5B,CAAC,MAAM,IAAId,oBAAoB,KAAK,IAAI,EAAE;MACxC,oBAAOH,OAAA,CAACN,KAAK;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,CAAC,CAAC;IACpB,CAAC,MAAM;MACL,oBAAOjB,OAAA,CAACL,KAAK;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,CAAC,CAAC;IACpB;EACF,CAAC;EAED,oBACEjB,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAQkB,OAAO,EAAEb,aAAc;MAAAQ,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACpDL,UAAU,CAAC,CAAC;EAAA;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AAAAf,EAAA,CAzCMD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AA6CT,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}