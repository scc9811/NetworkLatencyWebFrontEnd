{"ast":null,"code":"var _jsxFileName = \"/Users/scc9811/GitHub/CapstoneDesign_FrontEnd/src/pages/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainPage() {\n  _s();\n  const [socketData, setSocketData] = useState(null);\n  const [isAllowed, setIsAllowed] = useState(null);\n  const [publicIP, setPublicIP] = useState('');\n  const [responseCount, setResponseCount] = useState(0); // 응답 횟수 상태 추가\n\n  const storeResult = async () => {\n    const {\n      averageResponseTime\n    } = socketData;\n    // Save averageResponseTime to localStorage\n    localStorage.setItem('averageResponseTime', averageResponseTime);\n\n    // Check if token exists in localStorage\n    const token = localStorage.getItem('token');\n    console.log('token : ', token);\n    if (token) {\n      // token 있으면 --> 백엔드 서버로 userEmail, nickName 요청 가능.\n      try {\n        const response = await fetch('http://localhost:8080/ping/storeResult', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            averageResponseTime\n          })\n        });\n        console.log('요청결과 : ', response);\n        if (response.ok) {\n          alert('저장 완료');\n          window.location.href = '/user/myPage';\n        } else {\n          alert('로그인이 필요합니다');\n          window.location.href = '/user/signIn';\n        }\n      } catch (error) {\n        alert('로그인이 필요합니다');\n        window.location.href = '/user/signIn';\n      }\n    } else {\n      window.location.href = '/user/signIn';\n    }\n  };\n  useEffect(() => {\n    const fetchPublicIP = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/ping/getClientIP');\n        const data = await response.text();\n        setPublicIP(data);\n      } catch (error) {\n        console.error('Error fetching public IP:', error);\n      }\n    };\n    fetchPublicIP();\n  }, []);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/ping/isICMPInboundAllowed');\n        const data = await response.json();\n        setIsAllowed(data.allowed);\n        console.log('data.allowed = ', data.allowed);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        window.location.href = '/guidePage';\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (isAllowed) {\n      // WebSocket 연결\n      const ws = new WebSocket('ws://localhost:8080/socketConnection');\n\n      // 소켓 연결될 때 실행되는 함수\n      ws.onopen = () => {\n        console.log('WebSocket connected');\n      };\n\n      // 메시지를 수신할 때 실행되는 함수\n      ws.onmessage = event => {\n        const data = JSON.parse(event.data);\n        setSocketData(data);\n        setResponseCount(prevCount => prevCount + 1);\n      };\n\n      // 컴포넌트가 언마운트될 때 WebSocket 연결 해제\n      return () => {\n        ws.close();\n      };\n    }\n  }, [isAllowed]);\n  if (isAllowed === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"userIP\",\n        children: \"\\uBC29\\uD654\\uBCBD \\uD655\\uC778 \\uD544\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.href = '/guidePage',\n        children: \"\\uBC29\\uD654\\uBCBD \\uAC00\\uC774\\uB4DC\\uB85C \\uC774\\uB3D9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n  if (!isAllowed) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"guideButtonBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"userIP\",\n          children: \"\\uBC29\\uD654\\uBCBD \\uD655\\uC778 \\uD544\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.href = '/guidePage',\n          children: \"\\uBC29\\uD654\\uBCBD \\uAC00\\uC774\\uB4DC\\uB85C \\uC774\\uB3D9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  }\n  if (!socketData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"userIP\",\n        children: \"\\uBC29\\uD654\\uBCBD \\uD655\\uC778 \\uD544\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.href = '/guidePage',\n        children: \"\\uBC29\\uD654\\uBCBD \\uAC00\\uC774\\uB4DC\\uB85C \\uC774\\uB3D9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"userIP\",\n      children: [\"Your Public IP : \", publicIP, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 37\n      }, this), \"Server IP : 54.180.58.154 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"myBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"\\uD3C9\\uADE0 \\uC751\\uB2F5\\uC2DC\\uAC04 : \", socketData.averageResponseTime, \"\\uCD08\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), socketData.running ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"\\uD328\\uD0B7 \\uC190\\uC2E4 \\uBE44\\uC728 : \", socketData.packetLossRate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"storeButton\",\n          onClick: storeResult,\n          children: \"\\uACB0\\uACFC \\uC800\\uC7A5\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\uC751\\uB2F5 \\uD69F\\uC218 : \", responseCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s(MainPage, \"LdTytqM84mHw0SIZTi6sfVmWBUI=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MainPage","_s","socketData","setSocketData","isAllowed","setIsAllowed","publicIP","setPublicIP","responseCount","setResponseCount","storeResult","averageResponseTime","localStorage","setItem","token","getItem","console","log","response","fetch","method","headers","body","JSON","stringify","ok","alert","window","location","href","error","fetchPublicIP","data","text","fetchData","json","allowed","ws","WebSocket","onopen","onmessage","event","parse","prevCount","close","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","running","packetLossRate","_c","$RefreshReg$"],"sources":["/Users/scc9811/GitHub/CapstoneDesign_FrontEnd/src/pages/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction MainPage() {\n  const [socketData, setSocketData] = useState(null);\n  const [isAllowed, setIsAllowed] = useState(null);\n  const [publicIP, setPublicIP] = useState('');\n  const [responseCount, setResponseCount] = useState(0); // 응답 횟수 상태 추가\n\n\n  const storeResult = async() => {\n    const { averageResponseTime } = socketData;\n    // Save averageResponseTime to localStorage\n    localStorage.setItem('averageResponseTime', averageResponseTime);\n\n    // Check if token exists in localStorage\n    const token = localStorage.getItem('token');\n\n    console.log('token : ', token);\n    if (token) {\n      // token 있으면 --> 백엔드 서버로 userEmail, nickName 요청 가능.\n      try {\n        const response = await fetch('http://localhost:8080/ping/storeResult', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify({ averageResponseTime })\n        });\n        console.log('요청결과 : ', response);\n        if(response.ok) {\n          alert('저장 완료');\n          window.location.href = '/user/myPage';\n        } else {\n          alert('로그인이 필요합니다');\n          window.location.href = '/user/signIn';\n        }\n      } catch (error) {\n        alert('로그인이 필요합니다');\n        window.location.href = '/user/signIn';\n      }\n    } else {\n      window.location.href = '/user/signIn';\n    }\n  }\n\n  useEffect(() => {\n    const fetchPublicIP = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/ping/getClientIP');\n        const data = await response.text();\n        setPublicIP(data);\n      } catch (error) {\n        console.error('Error fetching public IP:', error);\n      }\n    };\n    fetchPublicIP();\n  }, []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/ping/isICMPInboundAllowed');\n        const data = await response.json();\n        setIsAllowed(data.allowed);\n        console.log('data.allowed = ', data.allowed);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        window.location.href = '/guidePage';\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (isAllowed) {\n      // WebSocket 연결\n      const ws = new WebSocket('ws://localhost:8080/socketConnection');\n\n      // 소켓 연결될 때 실행되는 함수\n      ws.onopen = () => {\n        console.log('WebSocket connected');\n      };\n\n      // 메시지를 수신할 때 실행되는 함수\n      ws.onmessage = (event) => {\n        const data = JSON.parse(event.data);\n        setSocketData(data);\n        setResponseCount(prevCount => prevCount + 1);\n      };\n\n      // 컴포넌트가 언마운트될 때 WebSocket 연결 해제\n      return () => {\n        ws.close();\n      };\n    }\n  }, [isAllowed]);\n\n  if (isAllowed === null) {\n    return (\n      <div>\n        <h1 className='userIP'>방화벽 확인 필요.</h1>\n        <button onClick={() => window.location.href = '/guidePage'}>\n          방화벽 가이드로 이동\n        </button>\n      </div>\n    );\n  }\n\n  if (!isAllowed) {\n    return (\n      <div>\n        <div className='guideButtonBox'>\n          <h1 className='userIP'>방화벽 확인 필요.</h1>\n          <button onClick={() => window.location.href = '/guidePage'}>\n            방화벽 가이드로 이동\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  if (!socketData) {\n    return (\n      <div>\n        <h1 className='userIP'>방화벽 확인 필요.</h1>\n        <button onClick={() => window.location.href = '/guidePage'}>\n          방화벽 가이드로 이동\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h1 className='userIP'>\n        Your Public IP : {publicIP} <br />\n        Server IP : 54.180.58.154 <br />\n      </h1>\n      <div className='myBox'>\n        <h1>평균 응답시간 : {socketData.averageResponseTime}초</h1>\n        {socketData.running ? null : (\n          <div>\n            <h1>패킷 손실 비율 : {socketData.packetLossRate}</h1>\n            <button className='storeButton' onClick={storeResult}>결과 저장하기</button>\n          </div>\n        )}\n        <h2>응답 횟수 : {responseCount}</h2> {/* 응답 횟수 표시 */}\n      </div>\n    </div>\n  );\n}\n\nexport default MainPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}