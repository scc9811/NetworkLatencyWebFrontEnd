{"ast":null,"code":"var _jsxFileName = \"/Users/scc9811/GitHub/CapstoneDesign_FrontEnd/src/pages/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainPage() {\n  _s();\n  const [socketData, setSocketData] = useState(null);\n  const [isAllowed, setIsAllowed] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/ping/isICMPInboundAllowed');\n        const data = await response.json();\n        setIsAllowed(data.allowed);\n        console.log('data.allowed = ', data.allowed);\n        console.log('isAllowed = ', isAllowed);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    console.log('isAllowed = ', isAllowed);\n    // if (isAllowed == false) {\n    //   // allowed가 false인 경우 guidePage로 리다이렉트\n    //   window.location.href = '/guidePage';\n    //   return;\n    // }\n\n    // WebSocket 연결\n    // const ws = new WebSocket('ws://scc9811.site:8080/socketConnection');\n    const ws = new WebSocket('ws://localhost:8080/socketConnection');\n\n    // 소켓 연결될 때 실행되는 함수\n    ws.onopen = () => {\n      console.log('WebSocket connected');\n    };\n\n    // 메시지를 수신할 때 실행되는 함수\n    ws.onmessage = event => {\n      const data = JSON.parse(event.data);\n      setSocketData(data);\n    };\n\n    // 컴포넌트가 언마운트될 때 WebSocket 연결 해제\n    return () => {\n      ws.close();\n    };\n  }, []);\n  if (!socketData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"averageResponseTime: \", socketData.averageResponseTime]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), socketData.running ? null : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"packetLossRate: \", socketData.packetLossRate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(MainPage, \"eYpJQCtv9gBnu3f3hxWe6HF+vb0=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MainPage","_s","socketData","setSocketData","isAllowed","setIsAllowed","fetchData","response","fetch","data","json","allowed","console","log","error","ws","WebSocket","onopen","onmessage","event","JSON","parse","close","children","fileName","_jsxFileName","lineNumber","columnNumber","averageResponseTime","running","packetLossRate","_c","$RefreshReg$"],"sources":["/Users/scc9811/GitHub/CapstoneDesign_FrontEnd/src/pages/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction MainPage() {\n  const [socketData, setSocketData] = useState(null);\n  const [isAllowed, setIsAllowed] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/ping/isICMPInboundAllowed');\n        const data = await response.json();\n        setIsAllowed(data.allowed);\n        console.log('data.allowed = ', data.allowed);\n        console.log('isAllowed = ', isAllowed);\n\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    console.log('isAllowed = ', isAllowed);\n    // if (isAllowed == false) {\n    //   // allowed가 false인 경우 guidePage로 리다이렉트\n    //   window.location.href = '/guidePage';\n    //   return;\n    // }\n\n\n\n    // WebSocket 연결\n    // const ws = new WebSocket('ws://scc9811.site:8080/socketConnection');\n    const ws = new WebSocket('ws://localhost:8080/socketConnection');\n\n    // 소켓 연결될 때 실행되는 함수\n    ws.onopen = () => {\n      console.log('WebSocket connected');\n    };\n\n    // 메시지를 수신할 때 실행되는 함수\n    ws.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      setSocketData(data);\n    };\n\n    // 컴포넌트가 언마운트될 때 WebSocket 연결 해제\n    return () => {\n      ws.close();\n    };\n  }, []);\n\n  if (!socketData) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <h1>averageResponseTime: {socketData.averageResponseTime}</h1>\n      {socketData.running ? null : (\n        <h1>packetLossRate: {socketData.packetLossRate}</h1>\n      )}\n    </div>\n  );\n}\n\nexport default MainPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iDAAiD,CAAC;QAC/E,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,YAAY,CAACI,IAAI,CAACE,OAAO,CAAC;QAC1BC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEJ,IAAI,CAACE,OAAO,CAAC;QAC5CC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAET,SAAS,CAAC;MAExC,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDR,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAENT,SAAS,CAAC,MAAM;IACde,OAAO,CAACC,GAAG,CAAC,cAAc,EAAET,SAAS,CAAC;IACtC;IACA;IACA;IACA;IACA;;IAIA;IACA;IACA,MAAMW,EAAE,GAAG,IAAIC,SAAS,CAAC,sCAAsC,CAAC;;IAEhE;IACAD,EAAE,CAACE,MAAM,GAAG,MAAM;MAChBL,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACpC,CAAC;;IAED;IACAE,EAAE,CAACG,SAAS,GAAIC,KAAK,IAAK;MACxB,MAAMV,IAAI,GAAGW,IAAI,CAACC,KAAK,CAACF,KAAK,CAACV,IAAI,CAAC;MACnCN,aAAa,CAACM,IAAI,CAAC;IACrB,CAAC;;IAED;IACA,OAAO,MAAM;MACXM,EAAE,CAACO,KAAK,CAAC,CAAC;IACZ,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACpB,UAAU,EAAE;IACf,oBAAOH,OAAA;MAAAwB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACE5B,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,GAAI,uBAAqB,EAACrB,UAAU,CAAC0B,mBAAmB;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC7DzB,UAAU,CAAC2B,OAAO,GAAG,IAAI,gBACxB9B,OAAA;MAAAwB,QAAA,GAAI,kBAAgB,EAACrB,UAAU,CAAC4B,cAAc;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACpD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC1B,EAAA,CAhEQD,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAkEjB,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}