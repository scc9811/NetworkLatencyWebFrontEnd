{"ast":null,"code":"var _jsxFileName = \"/Users/scc9811/GitHub/CapstoneDesign_FrontEnd/src/App.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport MainPage from './pages/mainPage.js';\nimport Page2 from './pages/page2.js';\nimport PingTestPage from './pages/pingTestPage.js';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// function App() {\n//   return (\n//     <Router>\n//       <Routes>\n//         <Route path=\"/a\" element={<Page1/>} />\n//         <Route path=\"/b\" element={<Page2/>} />\n//       </Routes>\n//     </Router>\n//   );\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isAllowed, setIsAllowed] = useState(null);\n  useEffect(() => {\n    // POST 요청 보내기\n    axios.post('http://localhost:8080/ping/isICMPInboundAllowed').then(response => {\n      setIsAllowed(response.data.allowed);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []); // 컴포넌트가 마운트될 때 한 번만 실행되도록 빈 배열을 두 번째 매개변수로 전달\n\n  if (isAllowed === null) {\n    // 데이터가 로딩 중일 때 보여줄 화면\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  } else if (isAllowed) {\n    // isAllowed가 true일 때 보여줄 화면\n    return /*#__PURE__*/_jsxDEV(MainPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  } else {\n    // isAllowed가 false일 때 보여줄 화면\n    return /*#__PURE__*/_jsxDEV(Page2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n};\n_s(App, \"Pf2m5PS3ZsPHU22acdtmt28fBIM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Route","Routes","MainPage","Page2","PingTestPage","React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","isAllowed","setIsAllowed","post","then","response","data","allowed","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/scc9811/GitHub/CapstoneDesign_FrontEnd/src/App.js"],"sourcesContent":["// import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport MainPage from './pages/mainPage.js';\nimport Page2 from './pages/page2.js';\nimport PingTestPage from './pages/pingTestPage.js';\nimport React, { useState , useEffect } from 'react';\nimport axios from 'axios';\n\n\n// function App() {\n//   return (\n//     <Router>\n//       <Routes>\n//         <Route path=\"/a\" element={<Page1/>} />\n//         <Route path=\"/b\" element={<Page2/>} />\n//       </Routes>\n//     </Router>\n//   );\n// }\n\n\nconst App = () => {\n  const [isAllowed, setIsAllowed] = useState(null);\n\n  useEffect(() => {\n    // POST 요청 보내기\n    axios.post('http://localhost:8080/ping/isICMPInboundAllowed')\n      .then(response => {\n        setIsAllowed(response.data.allowed);\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n      });\n  }, []); // 컴포넌트가 마운트될 때 한 번만 실행되도록 빈 배열을 두 번째 매개변수로 전달\n\n  if (isAllowed === null) {\n    // 데이터가 로딩 중일 때 보여줄 화면\n    return <div>Loading...</div>;\n  } else if (isAllowed) {\n    // isAllowed가 true일 때 보여줄 화면\n    return <MainPage />;\n  } else {\n    // isAllowed가 false일 때 보여줄 화면\n    return <Page2 />;\n  }\n};\n\n\n\nexport default App;"],"mappings":";;AAAA;AACA,SAASA,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,KAAK,MAAM,kBAAkB;AACpC,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,KAAK,IAAIC,QAAQ,EAAGC,SAAS,QAAQ,OAAO;AACnD,OAAOC,KAAK,MAAM,OAAO;;AAGzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CAACO,IAAI,CAAC,iDAAiD,CAAC,CAC1DC,IAAI,CAACC,QAAQ,IAAI;MAChBH,YAAY,CAACG,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC;IACrC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,IAAIR,SAAS,KAAK,IAAI,EAAE;IACtB;IACA,oBAAOH,OAAA;MAAAa,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B,CAAC,MAAM,IAAId,SAAS,EAAE;IACpB;IACA,oBAAOH,OAAA,CAACR,QAAQ;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACrB,CAAC,MAAM;IACL;IACA,oBAAOjB,OAAA,CAACP,KAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAClB;AACF,CAAC;AAACf,EAAA,CAxBID,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA4BT,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}