{"ast":null,"code":"var _jsxFileName = \"/Users/scc9811/GitHub/CapstoneDesign_FrontEnd/src/pages/MainPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n\n// function MainPage() {\n//   const [socketData, setSocketData] = useState(null);\n//   const [isAllowed, setIsAllowed] = useState(false);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await fetch('http://localhost:8080/ping/isICMPInboundAllowed');\n//         const data = await response.json();\n//         setIsAllowed(data.allowed);\n//         console.log('data.allowed = ', data.allowed);\n//         console.log('isAllowed = ', isAllowed);\n\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//       }\n//     };\n\n//     fetchData();\n//   }, [isAllowed]);\n\n//   useEffect(() => {\n//     if (!isAllowed) {\n//       // allowed가 false인 경우 guidePage로 리다이렉트\n//       window.location.href = '/guidePage';\n//       return;\n//     }\n\n//     // WebSocket 연결\n//     // const ws = new WebSocket('ws://scc9811.site:8080/socketConnection');\n//     const ws = new WebSocket('ws://localhost:8080/socketConnection');\n\n//     // 소켓 연결될 때 실행되는 함수\n//     ws.onopen = () => {\n//       console.log('WebSocket connected');\n//     };\n\n//     // 메시지를 수신할 때 실행되는 함수\n//     ws.onmessage = (event) => {\n//       const data = JSON.parse(event.data);\n//       setSocketData(data);\n//     };\n\n//     // 컴포넌트가 언마운트될 때 WebSocket 연결 해제\n//     return () => {\n//       ws.close();\n//     };\n//   }, [isAllowed]);\n\n//   if (!socketData) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//       <h1>averageResponseTime: {socketData.averageResponseTime}</h1>\n//       {socketData.running ? null : (\n//         <h1>packetLossRate: {socketData.packetLossRate}</h1>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default MainPage;\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainPage() {\n  _s();\n  const [socketData, setSocketData] = useState(null);\n  const [isAllowed, setIsAllowed] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/ping/isICMPInboundAllowed');\n        const data = await response.json();\n        setIsAllowed(data.allowed);\n        console.log('data.allowed = ', data.allowed);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (isAllowed === null) return;\n    if (!isAllowed) {\n      // allowed가 false인 경우 guidePage로 리다이렉트\n      window.location.href = '/guidePage';\n      return;\n    }\n\n    // WebSocket 연결\n    const ws = new WebSocket('ws://localhost:8080/socketConnection');\n\n    // 소켓 연결될 때 실행되는 함수\n    ws.onopen = () => {\n      console.log('WebSocket connected');\n    };\n\n    // 메시지를 수신할 때 실행되는 함수\n    ws.onmessage = event => {\n      const data = JSON.parse(event.data);\n      setSocketData(data);\n    };\n\n    // 컴포넌트가 언마운트될 때 WebSocket 연결 해제\n    return () => {\n      ws.close();\n    };\n  }, [isAllowed]);\n  if (isAllowed === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 12\n    }, this);\n  }\n  if (!socketData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"averageResponseTime: \", socketData.averageResponseTime]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), socketData.running ? null : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"packetLossRate: \", socketData.packetLossRate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(MainPage, \"eYpJQCtv9gBnu3f3hxWe6HF+vb0=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MainPage","_s","socketData","setSocketData","isAllowed","setIsAllowed","fetchData","response","fetch","data","json","allowed","console","log","error","window","location","href","ws","WebSocket","onopen","onmessage","event","JSON","parse","close","children","fileName","_jsxFileName","lineNumber","columnNumber","averageResponseTime","running","packetLossRate","_c","$RefreshReg$"],"sources":["/Users/scc9811/GitHub/CapstoneDesign_FrontEnd/src/pages/MainPage.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n\n// function MainPage() {\n//   const [socketData, setSocketData] = useState(null);\n//   const [isAllowed, setIsAllowed] = useState(false);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await fetch('http://localhost:8080/ping/isICMPInboundAllowed');\n//         const data = await response.json();\n//         setIsAllowed(data.allowed);\n//         console.log('data.allowed = ', data.allowed);\n//         console.log('isAllowed = ', isAllowed);\n\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//       }\n//     };\n\n//     fetchData();\n//   }, [isAllowed]);\n\n//   useEffect(() => {\n//     if (!isAllowed) {\n//       // allowed가 false인 경우 guidePage로 리다이렉트\n//       window.location.href = '/guidePage';\n//       return;\n//     }\n\n\n\n//     // WebSocket 연결\n//     // const ws = new WebSocket('ws://scc9811.site:8080/socketConnection');\n//     const ws = new WebSocket('ws://localhost:8080/socketConnection');\n\n//     // 소켓 연결될 때 실행되는 함수\n//     ws.onopen = () => {\n//       console.log('WebSocket connected');\n//     };\n\n//     // 메시지를 수신할 때 실행되는 함수\n//     ws.onmessage = (event) => {\n//       const data = JSON.parse(event.data);\n//       setSocketData(data);\n//     };\n\n//     // 컴포넌트가 언마운트될 때 WebSocket 연결 해제\n//     return () => {\n//       ws.close();\n//     };\n//   }, [isAllowed]);\n\n//   if (!socketData) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//       <h1>averageResponseTime: {socketData.averageResponseTime}</h1>\n//       {socketData.running ? null : (\n//         <h1>packetLossRate: {socketData.packetLossRate}</h1>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default MainPage;\nimport React, { useState, useEffect } from 'react';\n\nfunction MainPage() {\n  const [socketData, setSocketData] = useState(null);\n  const [isAllowed, setIsAllowed] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/ping/isICMPInboundAllowed');\n        const data = await response.json();\n        setIsAllowed(data.allowed);\n        console.log('data.allowed = ', data.allowed);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (isAllowed === null) return;\n\n    if (!isAllowed) {\n      // allowed가 false인 경우 guidePage로 리다이렉트\n      window.location.href = '/guidePage';\n      return;\n    }\n\n    // WebSocket 연결\n    const ws = new WebSocket('ws://localhost:8080/socketConnection');\n\n    // 소켓 연결될 때 실행되는 함수\n    ws.onopen = () => {\n      console.log('WebSocket connected');\n    };\n\n    // 메시지를 수신할 때 실행되는 함수\n    ws.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      setSocketData(data);\n    };\n\n    // 컴포넌트가 언마운트될 때 WebSocket 연결 해제\n    return () => {\n      ws.close();\n    };\n  }, [isAllowed]);\n\n  if (isAllowed === null) {\n    return <div>Loading...</div>;\n  }\n\n  if (!socketData) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <h1>averageResponseTime: {socketData.averageResponseTime}</h1>\n      {socketData.running ? null : (\n        <h1>packetLossRate: {socketData.packetLossRate}</h1>\n      )}\n    </div>\n  );\n}\n\nexport default MainPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}