{"ast":null,"code":"var _jsxFileName = \"/Users/scc9811/GitHub/CapstoneDesign_FrontEnd/src/pages/TestPage.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestPage = () => {\n  const handlePostRequest = () => {\n    fetch('http://localhost:8080/user/getJwt', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        key: 'value'\n      }) // 필요한 데이터를 여기에 추가합니다\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('POST request succeeded with JSON response', data);\n    }).catch(error => {\n      console.error('There was a problem with the fetch operation:', error);\n    });\n  };\n  const handleGetRequest = () => {\n    fetch('www.~~~.request2').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('GET request succeeded with JSON response', data);\n    }).catch(error => {\n      console.error('There was a problem with the fetch operation:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePostRequest,\n      children: \"Button 1 (POST)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGetRequest,\n      children: \"Button 2 (GET)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_c = TestPage;\nexport default TestPage;\nvar _c;\n$RefreshReg$(_c, \"TestPage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TestPage","handlePostRequest","fetch","method","headers","body","JSON","stringify","key","then","response","ok","Error","json","data","console","log","catch","error","handleGetRequest","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/scc9811/GitHub/CapstoneDesign_FrontEnd/src/pages/TestPage.js"],"sourcesContent":["import React from 'react';\n\nconst TestPage = () => {\n  const handlePostRequest = () => {\n    fetch('http://localhost:8080/user/getJwt', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ key: 'value' })  // 필요한 데이터를 여기에 추가합니다\n    })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .then(data => {\n      console.log('POST request succeeded with JSON response', data);\n    })\n    .catch(error => {\n      console.error('There was a problem with the fetch operation:', error);\n    });\n  };\n\n  const handleGetRequest = () => {\n    fetch('www.~~~.request2')\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .then(data => {\n      console.log('GET request succeeded with JSON response', data);\n    })\n    .catch(error => {\n      console.error('There was a problem with the fetch operation:', error);\n    });\n  };\n\n  return (\n    <div>\n      <button onClick={handlePostRequest}>Button 1 (POST)</button>\n      <button onClick={handleGetRequest}>Button 2 (GET)</button>\n    </div>\n  );\n};\n\nexport default TestPage;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9BC,KAAK,CAAC,mCAAmC,EAAE;MACzCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,GAAG,EAAE;MAAQ,CAAC,CAAC,CAAE;IAC1C,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACZC,OAAO,CAACC,GAAG,CAAC,2CAA2C,EAAEF,IAAI,CAAC;IAChE,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;MACdH,OAAO,CAACG,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;IACvE,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BjB,KAAK,CAAC,kBAAkB,CAAC,CACxBO,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACZC,OAAO,CAACC,GAAG,CAAC,0CAA0C,EAAEF,IAAI,CAAC;IAC/D,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;MACdH,OAAO,CAACG,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;IACvE,CAAC,CAAC;EACJ,CAAC;EAED,oBACEnB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAQsB,OAAO,EAAEpB,iBAAkB;MAAAmB,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5D1B,OAAA;MAAQsB,OAAO,EAAEF,gBAAiB;MAAAC,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV,CAAC;AAACC,EAAA,GA7CI1B,QAAQ;AA+Cd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}